%%% This output was generated by embedproblem, version 1.7.7 (library version 1.7).
%%% Generated on Wed Nov 30 18:12:57 CET 2022
%%% using 'modal' embedding, version 1.6.0.
%%% Logic specification used:
%%% tff(simple_spec, logic, ($alethic_modal) == ([($constants) == ($flexible),($quantification) == ($varying),($modalities) == ($modal_system_M)])).

thf(person_type, type, person: $tType).
thf(mworld, type, mworld: $tType).
thf(mrel_type, type, mrel: (mworld > (mworld > $o))).
thf(mactual_type, type, mactual: mworld).
thf(mlocal_type, type, mlocal: ((mworld > $o) > $o)).
thf(mlocal_def, definition, (mlocal = (^ [Phi:(mworld > $o)]: ((Phi @ mactual))))).
thf(mglobal_type, type, mglobal: ((mworld > $o) > $o)).
thf(mglobal_def, definition, (mglobal = (^ [Phi:(mworld > $o)]: ((! [W:mworld]: ((Phi @ W))))))).
thf(mbox_type, type, mbox: ((mworld > $o) > (mworld > $o))).
thf(mbox_def, definition, (mbox = (^ [Phi:(mworld > $o),W:mworld]: ((! [V:mworld]: ((((mrel @ W) @ V) => (Phi @ V)))))))).
thf(mdia_type, type, mdia: ((mworld > $o) > (mworld > $o))).
thf(mdia_def, definition, (mdia = (^ [Phi:(mworld > $o),W:mworld]: ((? [V:mworld]: ((((mrel @ W) @ V) & (Phi @ V)))))))).
thf(mrel_reflexive, axiom, (! [W:mworld]: (((mrel @ W) @ W)))).
thf(eiw_person_type, type, eiw_person: (person > (mworld > $o))).
thf(eiw_person_nonempty, axiom, (! [W:mworld]: ((? [X:person]: (((eiw_person @ X) @ W)))))).
thf(geoff_decl, type, geoff: (mworld > person)).
thf(like_decl, type, like: (mworld > (person > $o))).
thf(id_of_decl, type, id_of: (mworld > (person > $int))).
thf(like_exactly_one_person, axiom, (mglobal @ (^ [W:mworld]: ((? [P:person]: ((((eiw_person @ P) @ W) & ((^ [W:mworld]: ((((^ [W:mworld]: (((like @ W) @ ((^ [W:mworld]: (P)) @ W)))) @ W) & ((^ [W:mworld]: ((! [OP:person]: ((((eiw_person @ OP) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: (((like @ W) @ ((^ [W:mworld]: (OP)) @ W)))) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: (OP)) @ W) = ((^ [W:mworld]: (P)) @ W)))) @ W)))) @ W)))))) @ W)))) @ W)))))))).
%----Infinite people here. The RHS of the conjunction limits it to an integer 
%----number of people.
thf(infinite_people, axiom, (mlocal @ (
  ^ [W:mworld]: (
    ! [I:$int]: (
      (^ [W:mworld]: (
        ($greatereq @ I @ 0)
        => 
        ((^ [W:mworld]: ((((^ [W:mworld]: ((? [P:person]: ((((eiw_person @ P) @ W) & ((^ [W:mworld]: ((((^ [W:mworld]: (((id_of @ W) @ ((^ [W:mworld]: (P)) @ W)))) @ W) = ((^ [W:mworld]: (I)) @ W)))) @ W)))))) @ W) & ((^ [W:mworld]: ((! [P1:person]: ((((eiw_person @ P1) @ W) => (! [P2:person]: ((((eiw_person @ P2) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((id_of @ W) @ ((^ [W:mworld]: (P1)) @ W)))) @ W) = ((^ [W:mworld]: (((id_of @ W) @ ((^ [W:mworld]: (P2)) @ W)))) @ W)))) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: (P1)) @ W) = ((^ [W:mworld]: (P2)) @ W)))) @ W)))) @ W))))))))) @ W)))) @ W)
        )
      )
      @ W
    )
  )
))).
thf(like_geoff_here, axiom, (mlocal @ (^ [W:mworld]: (((like @ W) @ (geoff @ W)))))).
thf(like_all, axiom, (mlocal @ (^ [W:mworld]: ((! [X:person]: ((((eiw_person @ X) @ W) => ((mdia @ (^ [W:mworld]: (((like @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W)))))))).
