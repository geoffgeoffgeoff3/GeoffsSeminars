fof(ifeq_axiom,conjecture,! [A] : ! [B] : ! [C] : ifeq2(A,A,B,C) = B ).
fof(ifeq_axiom_001,conjecture,! [A] : ! [B] : ! [C] : ifeq(A,A,B,C) = B ).
fof(cls_COMBI__def_0,conjecture,! [V_P] : ! [T_a] : c_COMBI(V_P,T_a) = V_P ).
fof(cls_hconf__def_1,conjecture,! [V_P] : ! [V_h] : ! [T_a] : ifeq(c_Conform_Ohconf(V_P,V_h,T_a),true,c_Exceptions_Opreallocated(V_h),true) = true ).
fof(cls_hconf_0,conjecture,c_Conform_Ohconf(v_P,v_ha____,tc_prod(tc_List_Olist(tc_List_Olist(tc_String_Ochar)),tc_Expr_Oexp(tc_List_Olist(tc_String_Ochar)))) = true ).
fof(cls_COMBI__def__raw_0,conjecture,c_COMBI(v_P,t_a) = v_P ).
fof(cls_CHAINED_0,conjecture,v_h_Ha____ = c_Fun_Ofun__upd(v_ha____,v_a____,c_Option_Ooption_OSome(c_Pair(v_C____,c_Objects_Oinit__fields(v_FDTs____),tc_List_Olist(tc_String_Ochar),tc_fun(tc_prod(tc_List_Olist(tc_String_Ochar),tc_List_Olist(tc_String_Ochar)),tc_Option_Ooption(tc_Value_Oval))),tc_prod(tc_List_Olist(tc_String_Ochar),tc_fun(tc_prod(tc_List_Olist(tc_String_Ochar),tc_List_Olist(tc_String_Ochar)),tc_Option_Ooption(tc_Value_Oval)))),tc_nat,tc_Option_Ooption(tc_prod(tc_List_Olist(tc_String_Ochar),tc_fun(tc_prod(tc_List_Olist(tc_String_Ochar),tc_List_Olist(tc_String_Ochar)),tc_Option_Ooption(tc_Value_Oval))))) ).
fof(cls_CHAINED_0_01,conjecture,c_Conform_Ooconf(v_P,v_ha____,c_Pair(v_C____,c_Objects_Oinit__fields(v_FDTs____),tc_List_Olist(tc_String_Ochar),tc_fun(tc_prod(tc_List_Olist(tc_String_Ochar),tc_List_Olist(tc_String_Ochar)),tc_Option_Ooption(tc_Value_Oval))),tc_prod(tc_List_Olist(tc_List_Olist(tc_String_Ochar)),tc_Expr_Oexp(tc_List_Olist(tc_String_Ochar)))) = true ).
fof(cls_CHAINED_0_02,conjecture,hAPP(v_ha____,v_a____) = c_Option_Ooption_ONone(tc_prod(tc_List_Olist(tc_String_Ochar),tc_fun(tc_prod(tc_List_Olist(tc_String_Ochar),tc_List_Olist(tc_String_Ochar)),tc_Option_Ooption(tc_Value_Oval)))) ).
fof(cls_conjecture_0,conjecture,c_Conform_Ohconf(v_P,v_h_Ha____,tc_prod(tc_List_Olist(tc_List_Olist(tc_String_Ochar)),tc_Expr_Oexp(tc_List_Olist(tc_String_Ochar)))) != true ).
fof(cls_ATP__Linkup_Oequal__imp__fequal_0,conjecture,! [V_x] : ! [T_a] : c_fequal(V_x,V_x,T_a) = true ).
fof(cls_ATP__Linkup_Ofequal__imp__equal_0,conjecture,! [V_X] : ! [V_Y] : ! [T_a] : ifeq2(c_fequal(V_X,V_Y,T_a),true,V_X,V_Y) = V_Y ).
